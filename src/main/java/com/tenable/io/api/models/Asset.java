package com.tenable.io.api.models;


import com.tenable.io.core.utilities.models.MacAddress;

import java.net.Inet4Address;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;


/**
 * Copyright (c) 2017 Tenable Network Security, Inc.
 */
public class Asset {
    private UUID biosUuid;
    private String hostFqdn;
    private String hostName;
    private Inet4Address hostIpV4;
    private UUID Id;
    private Date lastHostScanStart;
    private Date lastHostScanEnd;
    private String lastAuthenticatedScanProto;
    private Date lastAuthenticatedResult;
    private List<MacAddress> macAddresses;
    private UUID mcAfeeApoGuid;
    private String netbiosName;
    private String operatingSystem;
    private String systemType;


    /**
     * Gets the host's BIOS UUID; optional, can be null.
     *
     * @return the host's BIOS UUID; optional, can be null
     */
    public UUID getBiosUuid() {
        return biosUuid;
    }


    /**
     * Sets the host's BIOS UUID; optional, can be null.
     *
     * @param biosUuid the host's BIOS UUID; optional, can be null
     */
    public void setBiosUuid( UUID biosUuid ) {
        this.biosUuid = biosUuid;
    }


    /**
     * Sets the host's BIOS UUID; optional, can be null.
     *
     * @param biosUuid the host's BIOS UUID; optional, can be null
     * @return the asset
     */
    public Asset withBiosUuid( UUID biosUuid ) {
        this.biosUuid = biosUuid;
        return this;
    }


    /**
     * Gets the host's fully qualified domain name; optional, can be null.
     *
     * @return the host's fully qualified domain name; optional, can be null
     */
    public String getHostFqdn() {
        return hostFqdn;
    }


    /**
     * Sets the host's fully qualified domain name; optional, can be null.
     *
     * @param hostFqdn the host's fully qualified domain name; optional, can be null
     */
    public void setHostFqdn( String hostFqdn ) {
        this.hostFqdn = hostFqdn;
    }


    /**
     * Sets the host's fully qualified domain name; optional, can be null.
     *
     * @param hostFqdn the host's fully qualified domain name; optional, can be null
     * @return the asset
     */
    public Asset withHostFqdn( String hostFqdn ) {
        this.hostFqdn = hostFqdn;
        return this;
    }


    /**
     * Gets the host's name. Normally, this is populated with the value used to scan the host in the target list of the last scan that was ran where it was seen; always present.
     *
     * @return the host's name. Normally, this is populated with the value used to scan the host in the target list of the last scan that was ran where it was seen; always present
     */
    public String getHostName() {
        return hostName;
    }


    /**
     * Sets the host's name. Normally, this is populated with the value used to scan the host in the target list of the last scan that was ran where it was seen.
     *
     * @param hostName the host's name. Normally, this is populated with the value used to scan the host in the target list of the last scan that was ran where it was seen
     */
    public void setHostName( String hostName ) {
        this.hostName = hostName;
    }


    /**
     * Sets the host's name. Normally, this is populated with the value used to scan the host in the target list of the last scan that was ran where it was seen.
     *
     * @param hostName the host's name. Normally, this is populated with the value used to scan the host in the target list of the last scan that was ran where it was seen
     * @return the asset
     */
    public Asset withHostName( String hostName ) {
        this.hostName = hostName;
        return this;
    }


    /**
     * Gets the host's IPv4 address; optional, can be null.
     *
     * @return the host's IPv4 address; optional, can be null
     */
    public Inet4Address getHostIpV4() {
        return hostIpV4;
    }


    /**
     * Sets the host's IPv4 address; optional, can be null.
     *
     * @param hostIpV4 the host's IPv4 address; optional, can be null
     */
    public void setHostIpV4( Inet4Address hostIpV4 ) {
        this.hostIpV4 = hostIpV4;
    }


    /**
     * Sets the host's IPv4 address; optional, can be null.
     *
     * @param hostIpV4 the host's IPv4 address; optional, can be null
     * @return the asset
     */
    public Asset withHostIpV4( Inet4Address hostIpV4 ) {
        this.hostIpV4 = hostIpV4;
        return this;
    }


    /**
     * Gets the asset's UUID generated by Tenable.io for identification purposes; always present.
     *
     * @return the asset's UUID generated by Tenable.io for identification purposes; always present
     */
    public UUID getId() {
        return Id;
    }


    /**
     * Sets the asset's UUID generated by Tenable.io for identification purposes.
     *
     * @param id the asset's UUID generated by Tenable.io for identification purposes
     */
    public void setId( UUID id ) {
        this.Id = id;
    }


    /**
     * Sets the asset's UUID generated by Tenable.io for identification purposes.
     *
     * @param id the asset's UUID generated by Tenable.io for identification purposes
     * @return the asset
     */
    public Asset withId( UUID id ) {
        this.Id = id;
        return this;
    }


    /**
     * Gets the last time a scan was started for this host as a Date; always present.
     *
     * @return the last time a scan was started for this host as a Date; always present
     */
    public Date getLastHostScanStart() {
        return lastHostScanStart;
    }


    /**
     * Sets the last time a scan was started for this host as a Date.
     *
     * @param lastHostScanStart the last time a scan was started for this host as a Date
     */
    public void setLastHostScanStart( Date lastHostScanStart ) {
        this.lastHostScanStart = lastHostScanStart;
    }


    /**
     * Sets the last time a scan was started for this host as a Date.
     *
     * @param lastHostScanStart the last time a scan was started for this host as a Date
     * @return the asset
     */
    public Asset withLastHostScanStart( Date lastHostScanStart ) {
        this.lastHostScanStart = lastHostScanStart;
        return this;
    }


    /**
     * Gets the last time a scan was completed for this host as a Date; always present.
     *
     * @return the last time a scan was completed for this host as a Date; always present
     */
    public Date getLastHostScanEnd() {
        return lastHostScanEnd;
    }


    /**
     * Sets the last time a scan was completed for this host as a Date.
     *
     * @param lastHostScanEnd the last time a scan was completed for this host as a Date
     */
    public void setLastHostScanEnd( Date lastHostScanEnd ) {
        this.lastHostScanEnd = lastHostScanEnd;
    }


    /**
     * Sets the last time a scan was completed for this host as a Date.
     *
     * @param lastHostScanEnd the last time a scan was completed for this host as a Date
     * @return the asset
     */
    public Asset withLastHostScanEnd( Date lastHostScanEnd ) {
        this.lastHostScanEnd = lastHostScanEnd;
        return this;
    }


    /**
     * Gets the protocol that was used to perform an authenticated scan, e.g. 'ssh' or 'smb'; optional, can be null.
     *
     * @return the protocol that was used to perform an authenticated scan, e.g. 'ssh' or 'smb'; optional, can be null
     */
    public String getLastAuthenticatedScanProto() {
        return lastAuthenticatedScanProto;
    }


    /**
     * Sets the protocol that was used to perform an authenticated scan, e.g. 'ssh' or 'smb'; optional, can be null.
     *
     * @param lastAuthenticatedScanProto the protocol that was used to perform an authenticated scan, e.g. 'ssh' or 'smb'; optional, can be null
     */
    public void setLastAuthenticatedScanProto( String lastAuthenticatedScanProto ) {
        this.lastAuthenticatedScanProto = lastAuthenticatedScanProto;
    }


    /**
     * Sets the protocol that was used to perform an authenticated scan, e.g. 'ssh' or 'smb'; optional, can be null.
     *
     * @param lastAuthenticatedScanProto the protocol that was used to perform an authenticated scan, e.g. 'ssh' or 'smb'; optional, can be null
     * @return the asset
     */
    public Asset withLastAuthenticatedScanProto( String lastAuthenticatedScanProto ) {
        this.lastAuthenticatedScanProto = lastAuthenticatedScanProto;
        return this;
    }


    /**
     * Gets the last time an authenticated scan was completed as a Date. Optional, can be null.
     *
     * @return the last time an authenticated scan was completed as a Date. Optional, can be null
     */
    public Date getLastAuthenticatedResult() {
        return lastAuthenticatedResult;
    }


    /**
     * Sets the last time an authenticated scan was completed as a Date.
     *
     * @param lastAuthenticatedResult the last time an authenticated scan was completed as a Date
     */
    public void setLastAuthenticatedResult( Date lastAuthenticatedResult ) {
        this.lastAuthenticatedResult = lastAuthenticatedResult;
    }


    /**
     * Sets the last time an authenticated scan was completed as a Date.
     *
     * @param lastAuthenticatedResult the last time an authenticated scan was completed as a Date
     * @return the asset
     */
    public Asset withLastAuthenticatedResult( Date lastAuthenticatedResult ) {
        this.lastAuthenticatedResult = lastAuthenticatedResult;
        return this;
    }


    /**
     * Gets the hosts's mac addresses list; optional, can be null.
     *
     * @return the hosts's mac addresses list; optional, can be null
     */
    public List<MacAddress> getMacAddresses() {
        return macAddresses;
    }


    /**
     * Sets the hosts's mac addresses list; optional, can be null.
     *
     * @param macAddresses the hosts's mac addresses list; optional, can be null
     */
    public void setMacAddresses( List<MacAddress> macAddresses ) {
        this.macAddresses = macAddresses;
    }


    /**
     * Sets the hosts's mac addresses list; optional, can be null.
     *
     * @param macAddresses the hosts's mac addresses list; optional, can be null
     * @return the asset
     */
    public Asset withMacAddresses( List<MacAddress> macAddresses ) {
        this.macAddresses = macAddresses;
        return this;
    }


    /**
     * Adds a hosts's mac addresses to the list.
     *
     * @param macAddress the mac addresses to add
     */
    public void addMacAddress( MacAddress macAddress ) {
        if( macAddresses == null )
            macAddresses = new ArrayList<>();

        this.macAddresses.add( macAddress );
   }


    /**
     * Gets the host's McAfee ePolicy Orchestrator UUID; optional, can be null.
     *
     * @return the host's McAfee ePolicy Orchestrator UUID; optional, can be null
     */
    public UUID getMcAfeeApoGuid() {
        return mcAfeeApoGuid;
    }


    /**
     * Sets the host's McAfee ePolicy Orchestrator UUID; optional, can be null.
     *
     * @param mcAfeeApoGuid the host's McAfee ePolicy Orchestrator UUID; optional, can be null
     */
    public void setMcAfeeApoGuid( UUID mcAfeeApoGuid ) {
        this.mcAfeeApoGuid = mcAfeeApoGuid;
    }


    /**
     * Sets the host's McAfee ePolicy Orchestrator UUID; optional, can be null.
     *
     * @param mcAfeeApoGuid the host's McAfee ePolicy Orchestrator UUID; optional, can be null
     * @return the asset
     */
    public Asset withMcAfeeApoGuid( UUID mcAfeeApoGuid ) {
        this.mcAfeeApoGuid = mcAfeeApoGuid;
        return this;
    }


    /**
     * Gets the host's netbios name; optional, can be null.
     *
     * @return the host's netbios name; optional, can be null
     */
    public String getNetbiosName() {
        return netbiosName;
    }


    /**
     * Sets the host's netbios name; optional, can be null.
     *
     * @param netbiosName the host's netbios name; optional, can be null
     */
    public void setNetbiosName( String netbiosName ) {
        this.netbiosName = netbiosName;
    }


    /**
     * Sets the host's netbios name; optional, can be null.
     *
     * @param netbiosName the host's netbios name; optional, can be null
     * @return the asset
     */
    public Asset withNetbiosName( String netbiosName ) {
        this.netbiosName = netbiosName;
        return this;
    }


    /**
     * Gets the host's operating system; optional, can be null.
     *
     * @return the host's operating system; optional, can be null
     */
    public String getOperatingSystem() {
        return operatingSystem;
    }


    /**
     * Sets the host's operating system; optional, can be null.
     *
     * @param operatingSystem the host's operating system; optional, can be null
     */
    public void setOperatingSystem( String operatingSystem ) {
        this.operatingSystem = operatingSystem;
    }


    /**
     * Sets the host's operating system; optional, can be null.
     *
     * @param operatingSystem the host's operating system; optional, can be null
     * @return the asset
     */
    public Asset withOperatingSystem( String operatingSystem ) {
        this.operatingSystem = operatingSystem;
        return this;
    }


    /**
     * Gets the host's system category, e.g. 'general' or 'router'; optional, can be null.
     *
     * @return the host's system category, e.g. 'general' or 'router'; optional, can be null
     */
    public String getSystemType() {
        return systemType;
    }


    /**
     * Sets the host's system category, e.g. 'general' or 'router'; optional, can be null.
     *
     * @param systemType the host's system category, e.g. 'general' or 'router'; optional, can be null
     */
    public void setSystemType( String systemType ) {
        this.systemType = systemType;
    }


    /**
     * Sets the host's system category, e.g. 'general' or 'router'; optional, can be null.
     *
     * @param systemType the host's system category, e.g. 'general' or 'router'; optional, can be null
     * @return the asset
     */
    public Asset withSystemType( String systemType ) {
        this.systemType = systemType;
        return this;
    }
}
